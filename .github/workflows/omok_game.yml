name: Omok Game

on:
  issues:
    types: [opened]
  workflow_dispatch:
    inputs:
      reset:
        description: 'Reset the game (enter "true" to reset)'
        required: false
        default: 'false'
        type: string

jobs:
  play-game:
    runs-on: ubuntu-latest
    if: github.event_name == 'issues' || (github.event_name == 'workflow_dispatch' && github.event.inputs.reset == 'true')
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        
    - name: Reset game if requested
      if: github.event_name == 'workflow_dispatch' && github.event.inputs.reset == 'true'
      run: |
        python omok_game.py --reset
        
    - name: Process move from issue
      if: github.event_name == 'issues'
      env:
        ISSUE_TITLE: ${{ github.event.issue.title }}
        ISSUE_NUMBER: ${{ github.event.issue.number }}
      run: |
        python omok_game.py --move "$ISSUE_TITLE" --issue-number $ISSUE_NUMBER
        
    - name: Commit and push changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add -A
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          git commit -m "Update game state - $(date '+%Y-%m-%d %H:%M:%S')"
          git push
        fi
        
    - name: Close issue if move was processed
      if: github.event_name == 'issues'
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.update({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.issue.number,
            state: 'closed'
          });